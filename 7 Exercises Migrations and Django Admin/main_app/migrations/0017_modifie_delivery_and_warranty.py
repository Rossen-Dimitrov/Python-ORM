# Generated by Django 4.2.4 on 2023-10-25 14:24

# makemigrations main_app --name modifie_delivery_and_warranty --empty

from django.db import migrations
from django.utils import timezone


def delivery_and_warranty(apps, schema_editor):
    orders_model = apps.get_model("main_app", "Order")
    orders = orders_model.objects.all()

    for order in orders:
        if order.status == "Pending":
            order.delivery = order.order_date + timezone.timedelta(days=3)
            order.save()
        elif order.status == "Completed":
            order.warranty = "24 months"
            order.save()
        else:
            order.delete()


def reverse_delivery_and_warranty(apps, schema_editor):
    orders_model = apps.get_model("main_app", "Order")
    orders = orders_model.objects.all()
    warranty_default = orders_model._meta.get_field("warranty").default
    for order in orders:
        if order.status == "Pending":
            order.delivery = None
        elif order.status == "Completed":
            order.warranty = warranty_default

    orders_model.objects.bulk_update(orders, ["delivery", "warranty"])


class Migration(migrations.Migration):
    dependencies = [
        ('main_app', '0016_order'),
    ]

    operations = [
        migrations.RunPython(delivery_and_warranty, reverse_code=reverse_delivery_and_warranty)
    ]
